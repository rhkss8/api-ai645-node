// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RecommendationHistory {
  id          String   @id @default(cuid())
  round       Int?     // 회차 정보 (optional)
  numbers     Json     // 추천된 번호들 5세트 [[1,2,3,4,5,6], [7,8,9,10,11,12], ...]
  type        RecommendationType
  conditions  Json?    // 사용자 입력 조건 (최근 구매번호, 제외번호 등)
  imageData   Json?    // 이미지에서 추출한 번호 정보 (premium only)
  gptModel    String   // 사용된 GPT 모델 (gpt-3.5-turbo, gpt-4o)
  analysis    String?  // GPT 분석 결과
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 관계
  reviews     RecommendationReview[]
  
  @@map("recommendation_history")
}

model RecommendationReview {
  id               String   @id @default(cuid())
  recommendationId String
  winningNumbers   Json     // 실제 당첨번호 [1,2,3,4,5,6,7] (보너스번호 포함)
  matchedCounts    Json     // 각 세트별 맞은 개수 [2, 1, 3, 0, 1]
  reviewText       String   // GPT가 생성한 회고문
  analysisPrompt   String   // 분석에 사용된 프롬프트
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  // 관계
  recommendation   RecommendationHistory @relation(fields: [recommendationId], references: [id], onDelete: Cascade)
  
  @@map("recommendation_review")
}

model WinningNumbers {
  id        String   @id @default(cuid())
  round     Int      @unique // 당첨회차
  numbers   Json     // 당첨번호 [1,2,3,4,5,6,7] (보너스번호 포함)
  bonusNumber Int    // 보너스추첨번호
  firstWinningAmount BigInt  // 1등 당첨금
  drawDate  DateTime // 추첨일
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("winning_numbers")
}

model ApiUsage {
  id           String   @id @default(cuid())
  endpoint     String   // API 엔드포인트
  gptModel     String?  // 사용된 GPT 모델
  tokenUsed    Int?     // 사용된 토큰 수
  cost         Float?   // 비용 (USD)
  responseTime Int?     // 응답 시간 (ms)
  success      Boolean  @default(true)
  errorMessage String?  // 에러 메시지
  userIp       String?  // 사용자 IP
  createdAt    DateTime @default(now())
  
  @@map("api_usage")
}

enum RecommendationType {
  FREE
  PREMIUM
}

model IPLimitRecord {
  id                String      @id @default(cuid())
  ipAddress         String      @unique
  lastRequestDate   String      // YYYY-MM-DD 형식
  requestCount      Int         @default(0)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  @@index([ipAddress, lastRequestDate])
  @@map("ip_limit_records")
}

enum AuthProvider {
  EMAIL
  KAKAO
  GOOGLE
  NAVER
}

model User {
  id          String      @id @default(cuid())
  email       String?     @unique
  nickname    String?
  password    String?     // 이메일 가입 시만 사용
  provider    AuthProvider
  providerId  String?     // 소셜 가입 시 소셜 고유 ID
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

// 인덱스 최적화
// @@index([createdAt])
// @@index([type])
// @@index([round]) 