# Node.js 18 기반 이미지 사용 (LTS 버전)
FROM node:18-alpine

# Prisma를 위한 필수 라이브러리 설치
RUN apk add --no-cache openssl libc6-compat

# 작업 디렉토리 설정
WORKDIR /app

# package.json과 package-lock.json 복사 (캐싱 최적화)
COPY package*.json ./
COPY tsconfig.json ./

# 의존성 설치 (dev dependencies 포함, TypeScript 빌드를 위해)
RUN npm ci && npm cache clean --force

# 소스 코드 복사
COPY . .

# 권한 문제 해결을 위한 설정
RUN chmod -R 755 /app/node_modules && \
    chown -R nodejs:nodejs /app

# Prisma 클라이언트 생성 (권한 수정 후)
RUN npx prisma generate

# TypeScript 컴파일 (조건부 마이그레이션)
ARG BUILD_WITH_MIGRATION=false
RUN if [ "$BUILD_WITH_MIGRATION" = "true" ] && [ -n "$DATABASE_URL" ]; then \
        npm run build:with-migration; \
    else \
        npm run build; \
    fi

# 스크립트 실행 권한 부여
RUN chmod +x scripts/init-data.sh
RUN chmod +x scripts/migrate-and-start.sh
RUN chmod +x scripts/build-with-migration.sh
RUN chmod +x scripts/migrate-seed-and-start.sh

# 비특권 사용자로 실행 (보안 강화)
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# 포트 노출
EXPOSE 4000

# 애플리케이션 실행 (마이그레이션 + 시드 스크립트 사용)
CMD ["./scripts/migrate-seed-and-start.sh"] 