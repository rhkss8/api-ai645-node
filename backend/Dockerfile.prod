# Multi-stage build for production
FROM node:18-alpine AS builder

# 작업 디렉토리 설정
WORKDIR /app

# package.json과 package-lock.json 복사
COPY package*.json ./

# 의존성 설치 (dev dependencies 포함)
RUN npm ci

# 소스 코드 복사
COPY . .

# 빌드 (필요시 - TypeScript, Webpack 등)
# RUN npm run build

# Production stage
FROM node:18-alpine AS production

# 보안을 위한 업데이트
RUN apk update && apk upgrade && apk add --no-cache dumb-init

# 작업 디렉토리 설정
WORKDIR /app

# package.json과 package-lock.json 복사
COPY package*.json ./

# production 의존성만 설치
RUN npm ci --only=production && npm cache clean --force

# 빌드된 애플리케이션 복사
COPY --from=builder /app .

# 비특권 사용자 생성 및 권한 설정
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

# 비특권 사용자로 실행
USER nodejs

# 포트 노출
EXPOSE 4000

# Health check 추가
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node healthcheck.js

# dumb-init을 사용하여 시그널 처리 개선
ENTRYPOINT ["dumb-init", "--"]

# 애플리케이션 실행
CMD ["npm", "run", "start:prod"] 